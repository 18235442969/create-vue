<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>create-vue</title>
    <!-- <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css"> -->
    <link rel="stylesheet" href="/css/ant.css">
    <link rel="stylesheet" href="/css/web.css">
  </head>
  <body>
    <div id="app">
      <% include ./container.ejs %>
    </div>
    <script src="/js/vue.min.js"></script>
    <script src="/js/moment.js"></script>
    <script src="/js/ant.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <!-- 引入组件库 -->
    <!-- <script src="https://unpkg.com/element-ui/lib/index.js"></script> -->
    <script>
      const app = new Vue({
        el: '#app',
        data: {
          tags: [],
          tagValue: '',
          templateList: [],
          template: '',
          css: 0,
        },
        mounted () {
          this.templateList = JSON.parse('<%- JSON.stringify(fileList) %>');
        },
        methods: {
          delTag(e, tag) {
            e.preventDefault();
            const tags = [...this.tags];
            this.tags = tags.filter(e => e != tag);
          },
          addTag() {
            if (this.tagValue.trim() === '') {
              return;
            }
            this.tags.push(this.tagValue.trim());
            this.tagValue = '';
          },
          changeTemplate(value) {
            this.template = this.templateList[value];
          },
          changeCss(e) {
            this.css = e.target.value;
          },
          submit() {
            if (this.template === '') {
              return this.$message.error('请选择模板');
            }
            if (this.tags.length === 0) {
              return this.$message.error('请添加文件');
            }
            axios.post('/api/createTemplate', {
              type: this.template,
              tags: this.tags,
              css: this.css
            }).then(res => {
              this.$message.success('创建成功');
            }).catch(error => {
              this.$message.error('创建失败');
              console.log(error)
            })
          }
        }
      });
    </script>
  </body>
</html>